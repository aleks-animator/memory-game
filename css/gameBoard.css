#game-board-front.rotate {
    perspective: 1000px; /* Adds depth for 3D effect */
    transform-origin: center; /* Rotate around the center */
    animation: spinWheel 45s linear infinite;
}

@keyframes spinWheel {
    from {
        transform: rotateZ(0deg);
    }
    to {
        transform: rotateZ(360deg);
    }
}


.card {
    width: 180px;
    height: 180px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: lightgray;
    border: 2px solid #555;
    cursor: pointer;
    border-radius: 10px;
    overflow: hidden; /* Ensures images do not overflow the card boundaries */
    position: relative; /* For easier handling of hidden states */
    transform-style: preserve-3d; /* Enable 3D transformations */
    transition: transform 0.2s ease, background-color 0.3s ease;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Initial drop shadow */
    background-size: 80%;
    background-repeat: no-repeat;
    background-position: center;
}

.cats-mode .card {
    background-image: url(../images/block-bg.svg);
}

.dogs-mode .card {
    background-image: url(../images/block-bg-dog.svg);
}

.birds-mode .card {
    background-image: url(../images/block-bg-bird.svg);
}

.card.revealed ,
.card.matched {
    background-size: 100%;
}


.card:hover {
    transform: translateZ(10px); /* Subtle pop-out effect */
}

/* Glow effect */
.card::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 10px;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0));
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s ease;
}

.card:hover::after {
    opacity: 1; /* Show glow on hover */
}
